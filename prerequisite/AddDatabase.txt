How to add database to your local PC

Open your terminal.

su to root

#Install postgresql on your machine
apt-get update
apt-get install postgresql postgresql-contrib

#Add user to store your database
adduser pgadmin

#Log into the default postgres user
su - postgres

#Go to the psql command prompt and create the postgres user
psql
CREATE USER pgadmin WITH PASSWORD 'root';
CREATE DATABASE rtfsdb OWNER pgadmin;

#Exit the interface
\q

#Switch to the pgadmin user and go to the new database command interface
su - pgadmin
psql rtfsdb

#Copy this to create the database with some data. Comments under

CREATE TABLE flight (
	flight_nr serial PRIMARY KEY,
	flight_date timestamp NOT NULL,
	cost_rob_miles int NOT NULL,
	location varchar(64) NOT NULL,
	cancelled bool DEFAULT '0' NOT NULL, 
  	comment varchar(512)
);

CREATE TABLE session (
  usersuser_id int4, 
  session_id   varchar(512) NOT NULL, 
  expire_date  timestamp NOT NULL, 
  login_tries  int4 NOT NULL, 
  PRIMARY KEY (session_id));

CREATE TABLE users (
	user_id serial PRIMARY KEY,
	first_name varchar(32) NOT NULL,
	last_name varchar(32) NOT NULL,
	mail varchar(64) NOT NULL,
	password varchar(128) NOT NULL,
	user_role int DEFAULT '0' NOT NULL,
	rob_miles int DEFAULT '0' NOT NULL,
	UNIQUE(mail)
);

CREATE TABLE users_flight (
  useruser_id    int NOT NULL, 
  flightflight_nr int NOT NULL, 
  paid  bool DEFAULT 'false' NOT NULL,
	PRIMARY KEY (useruser_id, 
  flightflight_nr));
  
ALTER TABLE session ADD CONSTRAINT FKsession FOREIGN KEY (usersuser_id) REFERENCES users (user_id) ON UPDATE Cascade ON DELETE Cascade;
ALTER TABLE users_flight ADD CONSTRAINT FKusers_flight FOREIGN KEY (useruser_id) REFERENCES users (user_id);
ALTER TABLE users_flight ADD CONSTRAINT FKflight_users FOREIGN KEY (flightflight_nr) REFERENCES flight (flight_nr);

INSERT INTO flight(flight_date, cost_rob_miles, location) VALUES ('2018-10-16 9:35', '420', 'IRS');
INSERT INTO flight(flight_date, cost_rob_miles, location) VALUES ('2018-10-16 9:35', '6969', 'Robanus');
INSERT INTO flight(flight_date, cost_rob_miles, location) VALUES ('2018-10-16 9:35', '2048', 'Robuto');

--DIT NIET DOEN--

INSERT INTO users (first_name, last_name, mail, password) VALUES ('John', 'Doe', 'john@mail.com', '12345678');
INSERT INTO users (first_name, last_name, mail, password) VALUES ('Marco', 'Water', 'marco@mail.com', '12345678');
INSERT INTO users (first_name, last_name, mail, password) VALUES ('Kelvin', 'Muller', 'kelvin@mail.com', '12345678');

INSERT INTO users_flight (useruser_id, flightflight_nr) VALUES ('1', '1'); 
INSERT INTO users_flight (useruser_id, flightflight_nr) VALUES ('1', '3'); 
INSERT INTO users_flight (useruser_id, flightflight_nr) VALUES ('2', '2');
INSERT INTO users_flight (useruser_id, flightflight_nr) VALUES ('3', '1'); 





#Execute the following querry's in order. Check after each querry of it exists with \d.
//Create the users database
CREATE TABLE users (
	user_id serial PRIMARY KEY,
	first_name varchar(32) NOT NULL,
	last_name varchar(32) NOT NULL,
	mail varchar(64) NOT NULL,
	password varchar(128) NOT NULL,
	user_role int DEFAULT '0' NOT NULL,
	rob_miles int DEFAULT '0' NOT NULL,
	UNIQUE(mail)
);

//Create flights database
CREATE TABLE flight (
	flight_nr serial PRIMARY KEY,
	flight_date timestamp NOT NULL,
	cost_rob_miles int NOT NULL,
	location varchar(64) NOT NULL
);

//Create users_flight table
CREATE TABLE users_flight (
  useruser_id    int NOT NULL, 
  flightflight_nr int NOT NULL, 
  cancelled       bool DEFAULT 'false' NOT NULL,
  paid  bool DEFAULT 'false' NOT NULL,
	PRIMARY KEY (useruser_id, 
  flightflight_nr));


//Create session table
CREATE TABLE session (
  usersuser_id int4, 
  session_id   varchar(512) NOT NULL, 
  expire_date  timestamp NOT NULL, 
  login_tries  int4 NOT NULL, 
  PRIMARY KEY (session_id));
  
ALTER TABLE session ADD CONSTRAINT FKsession FOREIGN KEY (usersuser_id) REFERENCES users (user_id) ON UPDATE Cascade ON DELETE Cascade;
ALTER TABLE users_flight ADD CONSTRAINT FKusers_flight FOREIGN KEY (useruser_id) REFERENCES users (user_id);
ALTER TABLE users_flight ADD CONSTRAINT FKflight_users FOREIGN KEY (flightflight_nr) REFERENCES flight (flight_nr);

#To add a test user execute the following commands:
INSERT INTO users (first_name, last_name, mail, password) VALUES ('John', 'Doe', 'test@mail.com', '12345678');

#Add test flight
INSERT INTO flight(flight_date, cost_rob_miles, location) VALUES ('2018-10-16 9:35', '999', 'Moscow');

#Add test user with flight
INSERT INTO users_flight (useruser_id, flightflight_nr) VALUES ('1', '1'); 





