# RobTheFlyShop configuration

bind		127.0.0.1 443
load		./RobTheFlyShop.so init #start with the init function
tls_dhparam	dh2048.pem

#Validation
validator	v_Email		regex	^[a-zA-Z0-9.]+@[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)+$	
validator	v_Password	regex	^[a-zA-Z0-9.!@#$%^&*]{6,18}$
validator 	v_Text_Numbers  regex 	^[a-zA-Z0-9]+$
validator	v_name		regex	^[a-zA-Z]{1,32}$
validator	v_numbers	regex	^[0-9]+$
validator	v_agreebox	regex	^1$
validator 	v_flight_loc	regex	^[a-zA-Z0-9 ]{1,64}$
validator	v_admin_check 	function	v_admin_validate
validator	v_user_check	function	v_user_validate
validator	v_generic_check	function	v_generic_validate

authentication auth_admin {
	authentication_type		cookie
	authentication_value 		session_id
	authentication_validator	v_admin_check
	authentication_uri		/login
}

authentication auth_user {
	authentication_type		cookie
	authentication_value 		session_id
	authentication_validator	v_user_check
	authentication_uri		/login
}
authentication auth_generic {
	authentication_type		cookie
	authentication_value 		session_id
	authentication_validator	v_generic_check
	authentication_uri		/login
}

#Domain Configuration
#add new pages here
domain * {
	certfile	cert/server.crt
	certkey		cert/server.key
	#important for logging the post and gets with ip-adress
	accesslog       /var/log/kore_access.log
	
#page handlers with no authentication required
	static	/		serve_index
	static 	/login		serve_login
	static	/register	serve_register
	static 	/eula		serve_eula

#page handlers with authentication
#TODO: ADD AUTHENTICATION
	#generic authentication (user or admin)
	static /logedin		serve_logedin				auth_generic
	static /logout	 	serve_logout				auth_generic
	static /info_page	serve_account_info			auth_generic
	static /change_info	serve_change_info			auth_generic
	
	#admin authentication
	static /admin/cancel_flight	serve_admin_cancel_flight	auth_admin
	static /admin/add_miles		serve_admin_add_miles		auth_admin
	static /admin/orders		serve_adminorders		auth_admin
	
	#user authentication	
	static 	/orders		serve_orders				auth_user

#post parameters
#the parameters will be tested against the validation,
#if the validator would fail kore will remove the failing paramater,
#indicating something went wrong,
#parameters not present in this block will be filtered out
params post /login {
	validate	Email		v_Email
	validate	Password	v_Password
}

params post /register {
	validate	email		v_Email
	validate	fname		v_name
	validate	lname		v_name
	validate	password	v_Password
	validate	passwordConfirm	v_Password
	validate	agree		v_agreebox
}

params post /change_info {
	validate	email		v_Email
	validate 	fname		v_name
	validate	lname		v_name
	validate	passwordOld	v_Password
	validate	passwordnew	v_Password
	validate	passwordConfirm	v_Password
}

params get /admin/add_miles {
	validate 	lastName	v_name
}
params post /admin/add_miles {
	validate 	robMiles	v_numbers
	validate	selectUser	v_numbers
}

params get /admin/cancel_flight {
	validate	flightLoc	v_flight_loc
}
params post /admin/cancel_flight {
	validate	selectFlight	v_numbers
}

params get /admin/orders {
	validate 	lastName	v_name
}

params post /admin/orders {
	validate 	selectUser	v_numbers
}

}
